//
// Return prefix for the device size
//
// @param   string  size  sm|md|lg
// @return  string
//
bs-bp-prefix(size) {
  return _size-prefix(size);
}

//
// A little brighten
//
// @param   hex  hex
// @return  hex
//
bs-light(hex) {
  return _light(hex);
}

//
// Brighten
//
// @param   hex  hex
// @return  hex
//
bs-lighter(hex) {
  return _lighter(hex);
}

//
// To very brighten
//
// @param   hex  hex
// @return  hex
//
bs-lightest(hex) {
  return _lightest(hex);
}

//
// A little darken
//
// @param   hex  hex
// @return  hex
//
bs-dark(hex) {
  return _dark(hex);
}

//
// Darken
//
// @param   hex  hex
// @return  hex
//
bs-darker(hex) {
  return _darker(hex);
}

//
// To very darken
//
// @param   hex  hex
// @return  hex
//
bs-darkest(hex) {
  return _darkest(hex);
}

//
// Return greatest common divisor
//
// @param   int  a  The number to be divided
// @param   int  b  The number to divide
// @return  int  The number of the remainder
//
bs-gcd(a, b) {
  return _gcd(a, b);
}

//
// Check bs-use-mixin-only
//
// @return  bool
//
bs-is-use-mixin-only() {
  return _is-use-mixin-only();
}

//
// Return rem from px
//
// @param   px  px
// @param   px  base-font-size-px
// @return  rem
//
bs-px2rem(px, base-font-size-px = bs-base-font-size-px) {
  return _px2rem(px, base-font-size-px);
}

//
// Return px from rem
//
// @param   rem  rem
// @param   px   base-font-size-px
// @return  px
//
bs-rem2px(rem, base-font-size-px = bs-base-font-size-px) {
  return _rem2px(rem, base-font-size-px);
}
