//
// Setspadding
//
// @param  int  coefficient-1
// @param  int  coefficient-2
// @param  int  coefficient-3
// @param  int  coefficient-4
//
_padding(coefficient-1, coefficient-2 = null, coefficient-3 = null, coefficient-4 = null) {
  if (coefficient-2 == null && coefficient-3 == null && coefficient-4 == null) {
    padding = _space(coefficient-1);
    padding: padding;
  } else if (coefficient-3 == null && coefficient-4 == null) {
    padding-vertical   = _space(coefficient-1);
    padding-horizontal = _space(coefficient-2);
    padding: padding-vertical padding-horizontal;
  } else if (coefficient-4 == null) {
    padding-top        = _space(coefficient-1);
    padding-horizontal = _space(coefficient-2);
    padding-bottom     = _space(coefficient-3);
    padding: padding-top padding-horizontal padding-bottom;
  } else {
    padding-top    = _space(coefficient-1);
    padding-right  = _space(coefficient-2);
    padding-bottom = _space(coefficient-3);
    padding-left   = _space(coefficient-4);
    padding: padding-top padding-right padding-bottom padding-left;
  }
}

//
// Retrun padding-top
//
// @param  int  coefficient
//
_padding-top(coefficient) {
  padding-top: _space(coefficient);
}

//
// Retrun padding-right
//
// @param  int  coefficient
//
_padding-right(coefficient) {
  padding-right: _space(coefficient);
}

//
// Retrun padding-bottom
//
// @param  int  coefficient
//
_padding-bottom(coefficient) {
  padding-bottom: _space(coefficient);
}

//
// Retrun padding-left
//
// @param  int  coefficient
//
_padding-left(coefficient) {
  padding-left: _space(coefficient);
}
